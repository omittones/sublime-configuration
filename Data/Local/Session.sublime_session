{
	"folder_history":
	[
		"/D/Code/gulp-asar"
	],
	"last_version": 3126,
	"last_window_id": 15,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1201.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"recent",
						"recentBallance\tlet"
					],
					[
						"dur",
						"Duration\tinterface"
					],
					[
						"pro",
						"port\tproperty"
					],
					[
						"st",
						"statusMessage\tproperty"
					],
					[
						"htt",
						"HttpResponseCallback\ttype"
					],
					[
						"sta",
						"startsWith\tmethod"
					],
					[
						"Ihttp",
						"IHttpBackendService\tinterface"
					],
					[
						"wi",
						"withCredentials\tparameter"
					],
					[
						"$http",
						"$httpBackend\tvar"
					],
					[
						"req",
						"RequestAPI\tinterface"
					],
					[
						"drop",
						"DropletResponse\tinterface"
					],
					[
						"ca",
						"CallbackAny\ttype"
					],
					[
						"mine",
						"MinerFileRespone\ttype"
					],
					[
						"nu",
						"number\tkeyword"
					],
					[
						"re",
						"resolve\tmethod"
					],
					[
						"Action",
						"Action2\ttype"
					],
					[
						"Dropl",
						"DropletResponse\tinterface"
					],
					[
						"to",
						"toString\tmethod"
					],
					[
						"iang",
						"IAngularStatic\tinterface"
					],
					[
						"imp",
						"implements\tkeyword"
					],
					[
						"Ia",
						"IAngularStatic\tmodule"
					],
					[
						"Compo",
						"ComponentClass\tinterface"
					],
					[
						"miner",
						"MinerQuery\tclass"
					],
					[
						"min",
						"MinerQuery\tclass"
					],
					[
						"minerfi",
						"minerFile\tparameter"
					],
					[
						"minerfile",
						"MinerFileRequest\ttype"
					],
					[
						"Miner",
						"MinerFileRequest\ttype"
					],
					[
						"Ihtt",
						"IHttpService\tinterface"
					],
					[
						"ihtt",
						"IHttpService\tinterface"
					],
					[
						"def",
						"defer\tmethod"
					],
					[
						"Tre",
						"TRequest\ttype parameter"
					],
					[
						"Chart",
						"ChartData\tinterface"
					],
					[
						"mi",
						"milliseconds\tmethod"
					],
					[
						"folde",
						"folder_exclude_patterns"
					],
					[
						"ran",
						"range\tmethod"
					],
					[
						"node",
						"node_modules"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 145.0,
				"last_filter": "git status",
				"selected_items":
				[
					[
						"git status",
						"Git: Status"
					],
					[
						"re",
						"TypeScript: Rename"
					],
					[
						"rnem",
						"TypeScript: Rename"
					],
					[
						"rena",
						"TypeScript: Rename"
					],
					[
						"form",
						"TypeScript: Format Document"
					],
					[
						"formd",
						"TypeScript: Format Document"
					],
					[
						"ren",
						"TypeScript: Rename"
					],
					[
						"comm",
						"Git: Commit"
					],
					[
						"add",
						"Git: Add All"
					],
					[
						"git stat",
						"Git: Status"
					],
					[
						"rename",
						"TypeScript: Rename"
					],
					[
						"conver",
						"Indentation: Convert to Spaces"
					],
					[
						"renam",
						"TypeScript: Rename"
					],
					[
						"stat",
						"Git: Status"
					],
					[
						"git adda",
						"Git: Add All"
					],
					[
						"commit",
						"Git: Commit"
					],
					[
						"git sta",
						"Git: Status"
					],
					[
						"gitadd",
						"Git: Add All"
					],
					[
						"installpa",
						"Package Control: Install Package"
					],
					[
						"enable",
						"Package Control: Enable Package"
					],
					[
						"rne",
						"TypeScript: Rename"
					],
					[
						"conve",
						"Indentation: Convert to Spaces"
					],
					[
						"for",
						"File: New Folder Relative to Project Root"
					],
					[
						"fileree",
						"File: Reveal"
					],
					[
						"mo",
						"File: Move"
					],
					[
						"new",
						"File: New File Relative to Current View"
					],
					[
						"move",
						"File: Move"
					],
					[
						"rn",
						"TypeScript: Rename"
					],
					[
						"java",
						"Set Syntax: JavaScript"
					],
					[
						"newrel",
						"File: New File Relative to Current View"
					],
					[
						"newfile",
						"File: New File Relative to Current View"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"converto",
						"Indentation: Convert to Spaces"
					],
					[
						"dele",
						"File: Delete"
					],
					[
						"duplica",
						"File: Duplicate"
					],
					[
						"err",
						"TypeScript: Show Error List"
					],
					[
						"newfil",
						"File: New File Relative to Current View"
					],
					[
						"newfi",
						"File: New File Relative to Current View"
					],
					[
						"forma",
						"TypeScript: Format Document"
					],
					[
						"get",
						"Snippet: get-property â€¦"
					],
					[
						"doc",
						"TypeScript: Format Document"
					],
					[
						"json",
						"Indent JSON"
					],
					[
						"renme",
						"File: Rename"
					],
					[
						"typescript ",
						"TypeScript: Signature Info"
					],
					[
						"typere",
						"TypeScript: Signature Info"
					],
					[
						"file",
						"File: New File Relative to Project Root"
					],
					[
						"tpefor",
						"TypeScript: Format Document"
					],
					[
						"ident",
						"Indentation: Reindent Lines"
					],
					[
						"relati",
						"File: New File Relative to Current View"
					],
					[
						"convert",
						"Indentation: Convert to Spaces"
					]
				],
				"width": 1320.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/D/Code/seed-gulp-ts/node_modules/@types/node/index.d.ts",
				"/D/Code/seed-gulp-ts/gulpfile.js",
				"/D/Code/seed-gulp-ts/src/main.ts",
				"/D/Code/seed-gulp-ts/package.json",
				"/D/Code/seed-gulp-ts/seed-gulp-ts.sublime-project",
				"/D/Code/seed-gulp-ts/tsconfig.json",
				"/D/Code/seed-gulp-ts/.gitignore",
				"/D/Code/seed-gulp-ts/src/index.html",
				"/D/Code/seed-gulp-ts/src/miner-status.html",
				"/D/Code/seed-gulp-ts/dist/main.js",
				"/D/Code/seed-gulp-ts/dist/package.json",
				"/D/Code/seed-gulp-ts/src/miner-status.ts",
				"/D/Code/seed-gulp-ts/src/index.ts",
				"/D/Code/seed-gulp-ts/src/dashboard.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/request/index.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/angular/index.d.ts",
				"/D/Code/seed-gulp-ts/src/queries.ts",
				"/D/Code/seed-gulp-ts/src/core.ts",
				"/D/Code/seed-gulp-ts/src/decorators.ts",
				"/D/Code/seed-gulp-ts/run.ps1",
				"/D/Code/seed-gulp-ts/src/components.ts",
				"/D/Code/seed-gulp-ts/TODO.md",
				"/D/Code/seed-gulp-ts/README.md",
				"/D/Code/seed-gulp-ts/src/do-wrapper.d.ts",
				"/D/Code/seed-gulp-ts/tslint.json",
				"/D/Code/seed-gulp-ts/src/dashboard.html",
				"/D/Code/seed-gulp-ts/lib/dashboard.js",
				"/D/Code/seed-gulp-ts/src/types.d.ts",
				"/D/Code/seed-gulp-ts/src/do-api-service.ts",
				"/D/Mining/Code/status-aggregator/TODO.md",
				"/D/Code/seed-gulp-ts/node_modules/do-wrapper/docs/do-wrapper.md",
				"/D/Mining/Code/status-aggregator/main.js",
				"/D/Code/seed-gulp-ts/node_modules/do-wrapper/package.json",
				"/D/Code/seed-gulp-ts/lib/miner-status.js",
				"/D/Code/seed-gulp-ts/node_modules/angular/index.js",
				"/D/Code/seed-gulp-ts/node_modules/angular/angular.js",
				"/D/Code/seed-gulp-ts/lib/miner-status.d.ts",
				"/D/Code/seed-gulp-ts/lib/core.js",
				"/D/Code/seed-gulp-ts/lib/index.html",
				"/D/Code/seed-gulp-ts/test/miner-status.spec.ts",
				"/D/Code/seed-gulp-ts/lib/greeter.js",
				"/D/Code/seed-gulp-ts/src/greeter.ts",
				"/D/Code/seed-gulp-ts/lib/components.js",
				"/D/Code/seed-gulp-ts/lib/core.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/moment/moment.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/moment/README.md",
				"/D/Code/seed-gulp-ts/lib/index.d.ts",
				"/D/Code/seed-gulp-ts/lib/main.d.ts",
				"/D/Code/seed-gulp-ts/lib/miner.js",
				"/D/Code/seed-gulp-ts/src/bower_components/jquery/src/traversing/findFilter.js",
				"/D/Code/seed-gulp-ts/node_modules/@types/lodash/index.d.ts",
				"/D/Code/seed-gulp-ts/src/bower_components/jquery/dist/jquery.js",
				"/D/Code/seed-gulp-ts/src/js/initialize.js",
				"/D/Code/seed-gulp-ts/src/bower_components/bootstrap/package.js",
				"/D/Code/seed-gulp-ts/node_modules/@types/chart.js/chart.js.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/typescript/lib/lib.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/electron/index.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/lodash/package.json",
				"/D/Code/seed-gulp-ts/lib/main.html",
				"/D/Code/seed-gulp-ts/src/main.html",
				"/D/Code/seed-gulp-ts/node_modules/@types/electron/package.json",
				"/D/UserData/SublimeText3.0/.gitignore",
				"/D/UserData/SublimeText3.0/Data/Local/Session.sublime_session",
				"/D/UserData/SublimeText2.0/.git"
			],
			"find":
			{
				"height": 80.0
			},
			"find_in_files":
			{
				"height": 220.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"lib",
					"this.model.",
					"milliseconds",
					"$ctrl.miner",
					"chart()",
					"$unsecuredHttps",
					"$compileProvider",
					", ",
					"httpprov",
					"static",
					"var",
					"         * ",
					"* Update",
					"* Request",
					"* Create",
					" */",
					"          * ",
					"*/",
					"        * ",
					"* ",
					"* Delete",
					"* Rename",
					"* Add",
					"* List",
					"* **call",
					"// ",
					"//",
					"// Get",
					"\n        *",
					"// ",
					"loadMinerFile",
					"slef",
					"this",
					"DropletRespone",
					"declare",
					"d",
					"declare",
					"export",
					"($http: ng.IHttpService)",
					"TView",
					"string|{}",
					"e784ba66d663ecd5cddbacec797505ff1ffec72bda0a8b2e4c8a38d9c66f4bf0",
					"export",
					"slu",
					"query,",
					"domainRecordId,",
					"a",
					"api.",
					"public",
					"    function",
					"function g",
					"app.get(",
					"imageId,",
					"callback: Function",
					"keyIdentity,",
					"name,",
					"dropletId,",
					"actionId,",
					"callback)",
					"ipAddress,",
					"(ipAddress,",
					"### DigitalOcean.",
					"\n\n\n\n\n// Get Account Information\n// Info [https://developers.digitalocean.com/documentation/v2/#account account](https://developers.digitalocean.com/documentation/v2/#account account)\n// **Parameters**\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.account(callback) \n\n\n\n\n\n\n\n\n// Get Account Actions\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.accountGetActions(query, callback) \n\n\n\n\n\n\n\n\n\n// Get Action Information for Account\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-action retrieve-an-existing-action](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-action retrieve-an-existing-action)\n// **Parameters**\n// **actionId**: `number`, The Id of the Action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetAction(actionId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// List all SSH Keys\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-keys list-all-keys](https://developers.digitalocean.com/documentation/v2/#list-all-keys list-all-keys)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetKeys(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Add a new SSH Key\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-key create-a-new-key](https://developers.digitalocean.com/documentation/v2/#create-a-new-key create-a-new-key)\n// **Parameters**\n// **configuration**: `*`, Information required to create SSH Key | {name: ?, public_key: ?}\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountAddKey(configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get an SSH Key via its Id\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key)\n// **Parameters**\n// **keyId**: `number`, The Id of the Key\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetKeyById(keyId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get an SSH Key via its Fingerprint\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key)\n// **Parameters**\n// **fingerprint**: `string`, The Fingerprint of the Key\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetKeyByFingerprint(fingerprint, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Rename a SSH Key\n// Info: [https://developers.digitalocean.com/documentation/v2/#update-a-key update-a-key](https://developers.digitalocean.com/documentation/v2/#update-a-key update-a-key)\n// **Parameters**\n// **keyIdentity**: `*`, The Id or Fingerprint of the SSH Key\n// **keyName**: `string`, What to rename the SSH Key to\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.accountRenameKey(keyIdentity, keyName, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a SSH Key\n// Info: [https://developers.digitalocean.com/documentation/v2/#destroy-a-key destroy-a-key](https://developers.digitalocean.com/documentation/v2/#destroy-a-key destroy-a-key)\n// **Parameters**\n// **keyIdentity**: `*`, The Id or Fingerprint of the SSH Key\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountDeleteKey(keyIdentity, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Droplets\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-droplets list-all-droplets](https://developers.digitalocean.com/documentation/v2/#list-all-droplets list-all-droplets)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Kernels available for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-available-kernels-for-a-droplet list-all-available-kernels-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-all-available-kernels-for-a-droplet list-all-available-kernels-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetKernels(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Snapshots for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-snapshots-for-a-droplet retrieve-snapshots-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-snapshots-for-a-droplet retrieve-snapshots-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetSnapshots(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Backups for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-backups-for-a-droplet list-backups-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-backups-for-a-droplet list-backups-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetBackups(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Actions for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-actions-for-a-droplet list-actions-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-actions-for-a-droplet list-actions-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetActions(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a New Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-droplet create-a-new-droplet](https://developers.digitalocean.com/documentation/v2/#create-a-new-droplet create-a-new-droplet)\n// **Parameters**\n// **configuration**: `*`, Creation parameters, see info for more details.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsCreate(configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a Droplet by Id\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-droplet-by-id retrieve-an-existing-droplet-by-id](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-droplet-by-id retrieve-an-existing-droplet-by-id)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsGetById(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-droplet delete-a-droplet](https://developers.digitalocean.com/documentation/v2/#delete-a-droplet delete-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsDelete(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Droplet Neighbors\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-neighbors-for-a-droplet list-neighbors-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-neighbors-for-a-droplet list-neighbors-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsGetNeighbors(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a report of Droplets sharing the same hardware\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-droplet-neighbors list-all-droplet-neighbors](https://developers.digitalocean.com/documentation/v2/#list-all-droplet-neighbors list-all-droplet-neighbors)\n// **Parameters**\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.dropletsGetNeighborsReport(callback) \n\n\n\n\n\n\n\n\n\n// Get a list of scheduled Droplet Upgrades\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-droplet-upgrades list-droplet-upgrades](https://developers.digitalocean.com/documentation/v2/#list-droplet-upgrades list-droplet-upgrades)\n// **Parameters**\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.dropletsGetUpgrades(callback) \n\n\n\n\n\n\n\n\n\n// Request an Action on a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#droplet-actions droplet-actions](https://developers.digitalocean.com/documentation/v2/#droplet-actions droplet-actions)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **action**: `*`, Action Object\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsRequestAction(dropletId, action, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get an Action for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-a-droplet-action retrieve-a-droplet-action](https://developers.digitalocean.com/documentation/v2/#retrieve-a-droplet-action retrieve-a-droplet-action)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **actionId**: `number`, The Id of the Action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetAction(dropletId, actionId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Domains\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-domains list-all-domains](https://developers.digitalocean.com/documentation/v2/#list-all-domains list-all-domains)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.domainsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Add a new Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-domain create-a-new-domain](https://developers.digitalocean.com/documentation/v2/#create-a-new-domain create-a-new-domain)\n// **Parameters**\n// **name**: `string`, Domain Name\n// **ip**: `string`, The Ip of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainsCreate(name, ip, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain retrieve-an-existing-domain](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain retrieve-an-existing-domain)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.domainsGet(name, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-domain delete-a-domain](https://developers.digitalocean.com/documentation/v2/#delete-a-domain delete-a-domain)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.domainsDelete(name, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Domain Records for a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-domain-records list-all-domain-records](https://developers.digitalocean.com/documentation/v2/#list-all-domain-records list-all-domain-records)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsGetAll(name, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a new Domain Record on a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-domain-record create-a-new-domain-record](https://developers.digitalocean.com/documentation/v2/#create-a-new-domain-record create-a-new-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **configuration**: `*`, Data required to create the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsCreate(name, configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a single Domain Record\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain-record retrieve-an-existing-domain-record](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain-record retrieve-an-existing-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **domainRecordId**: `number`, The Id of the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsGet(name, domainRecordId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Update a Domain Record\n// Info: [https://developers.digitalocean.com/documentation/v2/#update-a-domain-record update-a-domain-record](https://developers.digitalocean.com/documentation/v2/#update-a-domain-record update-a-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **domainRecordId**: `number`, The Id of the Domain Record\n// **configuration**: `*`, Data required to update the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n### DigitalOcean.domainRecordsUpdate(name, domainRecordId, configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Domain Record\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-domain-record delete-a-domain-record](https://developers.digitalocean.com/documentation/v2/#delete-a-domain-record delete-a-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **domainRecordId**: `number`, The Id of the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsDelete(name, domainRecordId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Regions\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-regions list-all-regions](https://developers.digitalocean.com/documentation/v2/#list-all-regions list-all-regions)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.regionsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Droplet sizes\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-sizes list-all-sizes](https://developers.digitalocean.com/documentation/v2/#list-all-sizes list-all-sizes)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.sizesGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Images\n// Include type=[distribution,application] or private=true in the query object to limit results.\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-images list-all-images](https://developers.digitalocean.com/documentation/v2/#list-all-images list-all-images)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get an Image using its Id\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-id retrieve-an-existing-image-by-id](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-id retrieve-an-existing-image-by-id)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.imagesGetById(imageId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get an Image using its Slug\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-slug retrieve-an-existing-image-by-slug](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-slug retrieve-an-existing-image-by-slug)\n// **Parameters**\n// **slug**: `string`, The Slug of the Image\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.imagesGetBySlug(slug, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Actions for an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-an-image list-all-actions-for-an-image](https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-an-image list-all-actions-for-an-image)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesGetActions(imageId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Update the name of an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#update-an-image update-an-image](https://developers.digitalocean.com/documentation/v2/#update-an-image update-an-image)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **name**: `string`, The Name to update the Image to\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesUpdate(imageId, name, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Delete an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-an-image delete-an-image](https://developers.digitalocean.com/documentation/v2/#delete-an-image delete-an-image)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.imagesDelete(imageId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Request an Action on an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#image-actions image-actions](https://developers.digitalocean.com/documentation/v2/#image-actions image-actions)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **action**: `*`, Action Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesRequestAction(imageId, action, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get the status of an Action\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-action retrieve-an-existing-image-action](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-action retrieve-an-existing-image-action)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **actionId**: `number`, The Id of the Action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesGetAction(imageId, actionId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Floating IPs\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-floating-ips list-all-floating-ips](https://developers.digitalocean.com/documentation/v2/#list-all-floating-ips list-all-floating-ips)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Create and assign a Floating IP to a specific droplet.\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet](https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The ID of Droplet that the Floating IP will be assigned to.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsAssignDroplet(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Create and assign a Floating IP to a region.\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet](https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet)\n// **Parameters**\n// **region**: `string`, The slug identifier for the region the Floating IP will be reserved to.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsAssignRegion(region, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Retrieve an existing Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip retrieve-an-existing-floating-ip](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip retrieve-an-existing-floating-ip)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsGet(ipAddress, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-floating-ips delete-a-floating-ips](https://developers.digitalocean.com/documentation/v2/#delete-a-floating-ips delete-a-floating-ips)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsDelete(ipAddress, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Request an action on a Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#floating-ip-actions floating-ip-actions](https://developers.digitalocean.com/documentation/v2/#floating-ip-actions floating-ip-actions)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **action**: `*`, Action options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.floatingIpsRequestAction(ipAddress, action, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// List all actions for a Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-a-floating-ip list-all-actions-for-a-floating-ip](https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-a-floating-ip list-all-actions-for-a-floating-ip)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.floatingIpsGetActions(ipAddress, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Retrieve an existing Floating IP action\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip-action retrieve-an-existing-floating-ip-action](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip-action retrieve-an-existing-floating-ip-action)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **actionId**: `number`, The Id of the action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.floatingIpsGetAction(ipAddress, actionId, callback) \n\n",
					"### DigitalOcean.",
					"public",
					"### DigitalOce",
					"### Digi",
					"### DigitalOcean",
					"public",
					"### DigitalOce",
					"### DigitalOcean.",
					"require",
					"type",
					"https",
					": ",
					"public",
					"$inject",
					"klass",
					"    function",
					"function",
					"minerFile",
					"export",
					"MinerStatusController",
					"Components",
					"this",
					"miner",
					"class",
					"interface",
					"$ctrl.miner.chart",
					"let",
					"self.miner",
					"self.hist",
					"miner",
					"miner.chart",
					"miner",
					"miner.chart",
					"nogloba",
					"  ",
					"times",
					"IInt",
					"interval",
					"declare ",
					"module",
					"type",
					"\"",
					"process",
					"module \"os",
					"module"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 44.0
			},
			"input":
			{
				"height": 69.0
			},
			"menu_visible": true,
			"output.doc":
			{
				"height": 0.0
			},
			"output.errorlist":
			{
				"height": 424.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.git":
			{
				"height": 230.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 88.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"gulp",
						"seed-gulp-ts\\gulpfile.js"
					],
					[
						"packa",
						"seed-gulp-ts\\package.json"
					],
					[
						"ma",
						"seed-gulp-ts\\src\\main.ts"
					],
					[
						"ine",
						"seed-gulp-ts\\src\\index.html"
					],
					[
						"in",
						"seed-gulp-ts\\src\\index.html"
					],
					[
						"run",
						"seed-gulp-ts\\run.ps1"
					],
					[
						"querie",
						"seed-gulp-ts\\src\\queries.ts"
					],
					[
						"inde",
						"@types\\angular\\index.d.ts"
					],
					[
						"typean",
						"@types\\angular\\index.d.ts"
					],
					[
						"",
						"seed-gulp-ts\\package.json"
					],
					[
						"miners",
						"seed-gulp-ts\\src\\miner-status.ts"
					],
					[
						"dash",
						"seed-gulp-ts\\src\\dashboard.ts"
					],
					[
						"compo",
						"seed-gulp-ts\\src\\components.ts"
					],
					[
						"miner",
						"seed-gulp-ts\\src\\miner-status.ts"
					],
					[
						"do",
						"seed-gulp-ts\\src\\do-wrapper.d.ts"
					],
					[
						"comp",
						"seed-gulp-ts\\src\\components.ts"
					],
					[
						"ind",
						"seed-gulp-ts\\src\\index.html"
					],
					[
						"dashboa",
						"seed-gulp-ts\\src\\dashboard.ts"
					],
					[
						"dow",
						"seed-gulp-ts\\src\\do-wrapper.d.ts"
					],
					[
						"indexts",
						"seed-gulp-ts\\src\\index.ts"
					],
					[
						"mine",
						"seed-gulp-ts\\lib\\miner-status.js"
					],
					[
						"angulad",
						"@types\\angular\\index.d.ts"
					],
					[
						"testgree",
						"seed-gulp-ts\\test\\greeter-spec.ts"
					],
					[
						"gree",
						"seed-gulp-ts\\lib\\greeter.js"
					],
					[
						"tscon",
						"seed-gulp-ts\\tsconfig.json"
					],
					[
						"tsconfif",
						"seed-gulp-ts\\src\\bower_components\\jquery\\src\\traversing\\findFilter.js"
					],
					[
						"char",
						"@types\\chart.js\\chart.js.d.ts"
					],
					[
						"anguin",
						"@types\\angular\\index.d.ts"
					],
					[
						"ang",
						"@types\\angular\\index.d.ts"
					],
					[
						"anguinde",
						"@types\\angular\\index.d.ts"
					],
					[
						"see",
						"seed-gulp-ts.sublime-project"
					],
					[
						"pa",
						"package.json"
					],
					[
						"tslin",
						"tslint.json"
					],
					[
						"gre",
						"src\\greeter.ts"
					],
					[
						"pac",
						"package.json"
					],
					[
						"pack",
						"package.json"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 1250.0,
				"last_filter": "miner",
				"selected_items":
				[
					[
						"miner",
						"D:\\Mining\\Code\\miner.sublime-project"
					],
					[
						"plato",
						"D:\\Code\\neogov\\personal\\neogov.platform.sublime-project"
					],
					[
						"pla",
						"D:\\Code\\neogov\\personal\\neogov.platform.sublime-project"
					]
				],
				"width": 950.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 643.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1601.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"recent",
						"recentBallance\tlet"
					],
					[
						"dur",
						"Duration\tinterface"
					],
					[
						"pro",
						"port\tproperty"
					],
					[
						"st",
						"statusMessage\tproperty"
					],
					[
						"htt",
						"HttpResponseCallback\ttype"
					],
					[
						"sta",
						"startsWith\tmethod"
					],
					[
						"Ihttp",
						"IHttpBackendService\tinterface"
					],
					[
						"wi",
						"withCredentials\tparameter"
					],
					[
						"$http",
						"$httpBackend\tvar"
					],
					[
						"req",
						"RequestAPI\tinterface"
					],
					[
						"drop",
						"DropletResponse\tinterface"
					],
					[
						"ca",
						"CallbackAny\ttype"
					],
					[
						"mine",
						"MinerFileRespone\ttype"
					],
					[
						"nu",
						"number\tkeyword"
					],
					[
						"re",
						"resolve\tmethod"
					],
					[
						"Action",
						"Action2\ttype"
					],
					[
						"Dropl",
						"DropletResponse\tinterface"
					],
					[
						"to",
						"toString\tmethod"
					],
					[
						"iang",
						"IAngularStatic\tinterface"
					],
					[
						"imp",
						"implements\tkeyword"
					],
					[
						"Ia",
						"IAngularStatic\tmodule"
					],
					[
						"Compo",
						"ComponentClass\tinterface"
					],
					[
						"miner",
						"MinerQuery\tclass"
					],
					[
						"min",
						"MinerQuery\tclass"
					],
					[
						"minerfi",
						"minerFile\tparameter"
					],
					[
						"minerfile",
						"MinerFileRequest\ttype"
					],
					[
						"Miner",
						"MinerFileRequest\ttype"
					],
					[
						"Ihtt",
						"IHttpService\tinterface"
					],
					[
						"ihtt",
						"IHttpService\tinterface"
					],
					[
						"def",
						"defer\tmethod"
					],
					[
						"Tre",
						"TRequest\ttype parameter"
					],
					[
						"Chart",
						"ChartData\tinterface"
					],
					[
						"mi",
						"milliseconds\tmethod"
					],
					[
						"folde",
						"folder_exclude_patterns"
					],
					[
						"ran",
						"range\tmethod"
					],
					[
						"node",
						"node_modules"
					]
				]
			},
			"buffers":
			[
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 145.0,
				"last_filter": "git status",
				"selected_items":
				[
					[
						"git status",
						"Git: Status"
					],
					[
						"re",
						"TypeScript: Rename"
					],
					[
						"rnem",
						"TypeScript: Rename"
					],
					[
						"rena",
						"TypeScript: Rename"
					],
					[
						"form",
						"TypeScript: Format Document"
					],
					[
						"formd",
						"TypeScript: Format Document"
					],
					[
						"ren",
						"TypeScript: Rename"
					],
					[
						"comm",
						"Git: Commit"
					],
					[
						"add",
						"Git: Add All"
					],
					[
						"git stat",
						"Git: Status"
					],
					[
						"rename",
						"TypeScript: Rename"
					],
					[
						"conver",
						"Indentation: Convert to Spaces"
					],
					[
						"renam",
						"TypeScript: Rename"
					],
					[
						"stat",
						"Git: Status"
					],
					[
						"git adda",
						"Git: Add All"
					],
					[
						"commit",
						"Git: Commit"
					],
					[
						"git sta",
						"Git: Status"
					],
					[
						"gitadd",
						"Git: Add All"
					],
					[
						"installpa",
						"Package Control: Install Package"
					],
					[
						"enable",
						"Package Control: Enable Package"
					],
					[
						"rne",
						"TypeScript: Rename"
					],
					[
						"conve",
						"Indentation: Convert to Spaces"
					],
					[
						"for",
						"File: New Folder Relative to Project Root"
					],
					[
						"fileree",
						"File: Reveal"
					],
					[
						"mo",
						"File: Move"
					],
					[
						"new",
						"File: New File Relative to Current View"
					],
					[
						"move",
						"File: Move"
					],
					[
						"rn",
						"TypeScript: Rename"
					],
					[
						"java",
						"Set Syntax: JavaScript"
					],
					[
						"newrel",
						"File: New File Relative to Current View"
					],
					[
						"newfile",
						"File: New File Relative to Current View"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"converto",
						"Indentation: Convert to Spaces"
					],
					[
						"dele",
						"File: Delete"
					],
					[
						"duplica",
						"File: Duplicate"
					],
					[
						"err",
						"TypeScript: Show Error List"
					],
					[
						"newfil",
						"File: New File Relative to Current View"
					],
					[
						"newfi",
						"File: New File Relative to Current View"
					],
					[
						"forma",
						"TypeScript: Format Document"
					],
					[
						"get",
						"Snippet: get-property â€¦"
					],
					[
						"doc",
						"TypeScript: Format Document"
					],
					[
						"json",
						"Indent JSON"
					],
					[
						"renme",
						"File: Rename"
					],
					[
						"typescript ",
						"TypeScript: Signature Info"
					],
					[
						"typere",
						"TypeScript: Signature Info"
					],
					[
						"file",
						"File: New File Relative to Project Root"
					],
					[
						"tpefor",
						"TypeScript: Format Document"
					],
					[
						"ident",
						"Indentation: Reindent Lines"
					],
					[
						"relati",
						"File: New File Relative to Current View"
					],
					[
						"convert",
						"Indentation: Convert to Spaces"
					]
				],
				"width": 1320.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/D/Code/seed-gulp-ts"
			],
			"file_history":
			[
				"/D/Code/seed-gulp-ts/gulpfile.js",
				"/D/Code/seed-gulp-ts/package.json",
				"/D/Code/seed-gulp-ts/seed-gulp-ts.sublime-project",
				"/D/Code/seed-gulp-ts/.gitignore",
				"/D/Code/seed-gulp-ts/src/main.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/node/index.d.ts",
				"/D/Code/seed-gulp-ts/tsconfig.json",
				"/D/Code/seed-gulp-ts/src/index.html",
				"/D/Code/seed-gulp-ts/src/miner-status.html",
				"/D/Code/seed-gulp-ts/dist/main.js",
				"/D/Code/seed-gulp-ts/dist/package.json",
				"/D/Code/seed-gulp-ts/src/miner-status.ts",
				"/D/Code/seed-gulp-ts/src/index.ts",
				"/D/Code/seed-gulp-ts/src/dashboard.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/request/index.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/angular/index.d.ts",
				"/D/Code/seed-gulp-ts/src/queries.ts",
				"/D/Code/seed-gulp-ts/src/core.ts",
				"/D/Code/seed-gulp-ts/src/decorators.ts",
				"/D/Code/seed-gulp-ts/run.ps1",
				"/D/Code/seed-gulp-ts/src/components.ts",
				"/D/Code/seed-gulp-ts/TODO.md",
				"/D/Code/seed-gulp-ts/README.md",
				"/D/Code/seed-gulp-ts/src/do-wrapper.d.ts",
				"/D/Code/seed-gulp-ts/tslint.json",
				"/D/Code/seed-gulp-ts/src/dashboard.html",
				"/D/Code/seed-gulp-ts/lib/dashboard.js",
				"/D/Code/seed-gulp-ts/src/types.d.ts",
				"/D/Code/seed-gulp-ts/src/do-api-service.ts",
				"/D/Mining/Code/status-aggregator/TODO.md",
				"/D/Code/seed-gulp-ts/node_modules/do-wrapper/docs/do-wrapper.md",
				"/D/Mining/Code/status-aggregator/main.js",
				"/D/Code/seed-gulp-ts/node_modules/do-wrapper/package.json",
				"/D/Code/seed-gulp-ts/lib/miner-status.js",
				"/D/Code/seed-gulp-ts/node_modules/angular/index.js",
				"/D/Code/seed-gulp-ts/node_modules/angular/angular.js",
				"/D/Code/seed-gulp-ts/lib/miner-status.d.ts",
				"/D/Code/seed-gulp-ts/lib/core.js",
				"/D/Code/seed-gulp-ts/lib/index.html",
				"/D/Code/seed-gulp-ts/test/miner-status.spec.ts",
				"/D/Code/seed-gulp-ts/lib/greeter.js",
				"/D/Code/seed-gulp-ts/src/greeter.ts",
				"/D/Code/seed-gulp-ts/lib/components.js",
				"/D/Code/seed-gulp-ts/lib/core.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/moment/moment.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/moment/README.md",
				"/D/Code/seed-gulp-ts/lib/index.d.ts",
				"/D/Code/seed-gulp-ts/lib/main.d.ts",
				"/D/Code/seed-gulp-ts/lib/miner.js",
				"/D/Code/seed-gulp-ts/src/bower_components/jquery/src/traversing/findFilter.js",
				"/D/Code/seed-gulp-ts/node_modules/@types/lodash/index.d.ts",
				"/D/Code/seed-gulp-ts/src/bower_components/jquery/dist/jquery.js",
				"/D/Code/seed-gulp-ts/src/js/initialize.js",
				"/D/Code/seed-gulp-ts/src/bower_components/bootstrap/package.js",
				"/D/Code/seed-gulp-ts/node_modules/@types/chart.js/chart.js.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/typescript/lib/lib.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/@types/electron/index.d.ts",
				"/D/Code/seed-gulp-ts/node_modules/lodash/package.json",
				"/D/Code/seed-gulp-ts/lib/main.html",
				"/D/Code/seed-gulp-ts/src/main.html",
				"/D/Code/seed-gulp-ts/node_modules/@types/electron/package.json",
				"/D/UserData/SublimeText3.0/.gitignore",
				"/D/UserData/SublimeText3.0/Data/Local/Session.sublime_session",
				"/D/UserData/SublimeText2.0/.git"
			],
			"find":
			{
				"height": 80.0
			},
			"find_in_files":
			{
				"height": 220.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"lib",
					"this.model.",
					"milliseconds",
					"$ctrl.miner",
					"chart()",
					"$unsecuredHttps",
					"$compileProvider",
					", ",
					"httpprov",
					"static",
					"var",
					"         * ",
					"* Update",
					"* Request",
					"* Create",
					" */",
					"          * ",
					"*/",
					"        * ",
					"* ",
					"* Delete",
					"* Rename",
					"* Add",
					"* List",
					"* **call",
					"// ",
					"//",
					"// Get",
					"\n        *",
					"// ",
					"loadMinerFile",
					"slef",
					"this",
					"DropletRespone",
					"declare",
					"d",
					"declare",
					"export",
					"($http: ng.IHttpService)",
					"TView",
					"string|{}",
					"e784ba66d663ecd5cddbacec797505ff1ffec72bda0a8b2e4c8a38d9c66f4bf0",
					"export",
					"slu",
					"query,",
					"domainRecordId,",
					"a",
					"api.",
					"public",
					"    function",
					"function g",
					"app.get(",
					"imageId,",
					"callback: Function",
					"keyIdentity,",
					"name,",
					"dropletId,",
					"actionId,",
					"callback)",
					"ipAddress,",
					"(ipAddress,",
					"### DigitalOcean.",
					"\n\n\n\n\n// Get Account Information\n// Info [https://developers.digitalocean.com/documentation/v2/#account account](https://developers.digitalocean.com/documentation/v2/#account account)\n// **Parameters**\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.account(callback) \n\n\n\n\n\n\n\n\n// Get Account Actions\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.accountGetActions(query, callback) \n\n\n\n\n\n\n\n\n\n// Get Action Information for Account\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-action retrieve-an-existing-action](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-action retrieve-an-existing-action)\n// **Parameters**\n// **actionId**: `number`, The Id of the Action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetAction(actionId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// List all SSH Keys\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-keys list-all-keys](https://developers.digitalocean.com/documentation/v2/#list-all-keys list-all-keys)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetKeys(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Add a new SSH Key\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-key create-a-new-key](https://developers.digitalocean.com/documentation/v2/#create-a-new-key create-a-new-key)\n// **Parameters**\n// **configuration**: `*`, Information required to create SSH Key | {name: ?, public_key: ?}\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountAddKey(configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get an SSH Key via its Id\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key)\n// **Parameters**\n// **keyId**: `number`, The Id of the Key\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetKeyById(keyId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get an SSH Key via its Fingerprint\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-key retrieve-an-existing-key)\n// **Parameters**\n// **fingerprint**: `string`, The Fingerprint of the Key\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountGetKeyByFingerprint(fingerprint, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Rename a SSH Key\n// Info: [https://developers.digitalocean.com/documentation/v2/#update-a-key update-a-key](https://developers.digitalocean.com/documentation/v2/#update-a-key update-a-key)\n// **Parameters**\n// **keyIdentity**: `*`, The Id or Fingerprint of the SSH Key\n// **keyName**: `string`, What to rename the SSH Key to\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.accountRenameKey(keyIdentity, keyName, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a SSH Key\n// Info: [https://developers.digitalocean.com/documentation/v2/#destroy-a-key destroy-a-key](https://developers.digitalocean.com/documentation/v2/#destroy-a-key destroy-a-key)\n// **Parameters**\n// **keyIdentity**: `*`, The Id or Fingerprint of the SSH Key\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.accountDeleteKey(keyIdentity, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Droplets\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-droplets list-all-droplets](https://developers.digitalocean.com/documentation/v2/#list-all-droplets list-all-droplets)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Kernels available for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-available-kernels-for-a-droplet list-all-available-kernels-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-all-available-kernels-for-a-droplet list-all-available-kernels-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetKernels(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Snapshots for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-snapshots-for-a-droplet retrieve-snapshots-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-snapshots-for-a-droplet retrieve-snapshots-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetSnapshots(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Backups for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-backups-for-a-droplet list-backups-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-backups-for-a-droplet list-backups-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetBackups(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Actions for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-actions-for-a-droplet list-actions-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-actions-for-a-droplet list-actions-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetActions(dropletId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a New Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-droplet create-a-new-droplet](https://developers.digitalocean.com/documentation/v2/#create-a-new-droplet create-a-new-droplet)\n// **Parameters**\n// **configuration**: `*`, Creation parameters, see info for more details.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsCreate(configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a Droplet by Id\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-droplet-by-id retrieve-an-existing-droplet-by-id](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-droplet-by-id retrieve-an-existing-droplet-by-id)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsGetById(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-droplet delete-a-droplet](https://developers.digitalocean.com/documentation/v2/#delete-a-droplet delete-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsDelete(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a list of Droplet Neighbors\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-neighbors-for-a-droplet list-neighbors-for-a-droplet](https://developers.digitalocean.com/documentation/v2/#list-neighbors-for-a-droplet list-neighbors-for-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.dropletsGetNeighbors(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get a report of Droplets sharing the same hardware\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-droplet-neighbors list-all-droplet-neighbors](https://developers.digitalocean.com/documentation/v2/#list-all-droplet-neighbors list-all-droplet-neighbors)\n// **Parameters**\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.dropletsGetNeighborsReport(callback) \n\n\n\n\n\n\n\n\n\n// Get a list of scheduled Droplet Upgrades\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-droplet-upgrades list-droplet-upgrades](https://developers.digitalocean.com/documentation/v2/#list-droplet-upgrades list-droplet-upgrades)\n// **Parameters**\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n\n### DigitalOcean.dropletsGetUpgrades(callback) \n\n\n\n\n\n\n\n\n\n// Request an Action on a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#droplet-actions droplet-actions](https://developers.digitalocean.com/documentation/v2/#droplet-actions droplet-actions)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **action**: `*`, Action Object\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsRequestAction(dropletId, action, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get an Action for a Droplet\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-a-droplet-action retrieve-a-droplet-action](https://developers.digitalocean.com/documentation/v2/#retrieve-a-droplet-action retrieve-a-droplet-action)\n// **Parameters**\n// **dropletId**: `number`, The Id of the Droplet\n// **actionId**: `number`, The Id of the Action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.dropletsGetAction(dropletId, actionId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Domains\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-domains list-all-domains](https://developers.digitalocean.com/documentation/v2/#list-all-domains list-all-domains)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.domainsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Add a new Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-domain create-a-new-domain](https://developers.digitalocean.com/documentation/v2/#create-a-new-domain create-a-new-domain)\n// **Parameters**\n// **name**: `string`, Domain Name\n// **ip**: `string`, The Ip of the Droplet\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainsCreate(name, ip, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain retrieve-an-existing-domain](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain retrieve-an-existing-domain)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.domainsGet(name, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-domain delete-a-domain](https://developers.digitalocean.com/documentation/v2/#delete-a-domain delete-a-domain)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.domainsDelete(name, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Domain Records for a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-domain-records list-all-domain-records](https://developers.digitalocean.com/documentation/v2/#list-all-domain-records list-all-domain-records)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsGetAll(name, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a new Domain Record on a Domain\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-domain-record create-a-new-domain-record](https://developers.digitalocean.com/documentation/v2/#create-a-new-domain-record create-a-new-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **configuration**: `*`, Data required to create the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsCreate(name, configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get a single Domain Record\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain-record retrieve-an-existing-domain-record](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-domain-record retrieve-an-existing-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **domainRecordId**: `number`, The Id of the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsGet(name, domainRecordId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Update a Domain Record\n// Info: [https://developers.digitalocean.com/documentation/v2/#update-a-domain-record update-a-domain-record](https://developers.digitalocean.com/documentation/v2/#update-a-domain-record update-a-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **domainRecordId**: `number`, The Id of the Domain Record\n// **configuration**: `*`, Data required to update the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n### DigitalOcean.domainRecordsUpdate(name, domainRecordId, configuration, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Domain Record\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-domain-record delete-a-domain-record](https://developers.digitalocean.com/documentation/v2/#delete-a-domain-record delete-a-domain-record)\n// **Parameters**\n// **name**: `string`, The Domain Name\n// **domainRecordId**: `number`, The Id of the Domain Record\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.domainRecordsDelete(name, domainRecordId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Regions\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-regions list-all-regions](https://developers.digitalocean.com/documentation/v2/#list-all-regions list-all-regions)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.regionsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Droplet sizes\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-sizes list-all-sizes](https://developers.digitalocean.com/documentation/v2/#list-all-sizes list-all-sizes)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.sizesGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Images\n// Include type=[distribution,application] or private=true in the query object to limit results.\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-images list-all-images](https://developers.digitalocean.com/documentation/v2/#list-all-images list-all-images)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get an Image using its Id\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-id retrieve-an-existing-image-by-id](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-id retrieve-an-existing-image-by-id)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.imagesGetById(imageId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get an Image using its Slug\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-slug retrieve-an-existing-image-by-slug](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-by-slug retrieve-an-existing-image-by-slug)\n// **Parameters**\n// **slug**: `string`, The Slug of the Image\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.imagesGetBySlug(slug, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Actions for an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-an-image list-all-actions-for-an-image](https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-an-image list-all-actions-for-an-image)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesGetActions(imageId, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Update the name of an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#update-an-image update-an-image](https://developers.digitalocean.com/documentation/v2/#update-an-image update-an-image)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **name**: `string`, The Name to update the Image to\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesUpdate(imageId, name, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Delete an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-an-image delete-an-image](https://developers.digitalocean.com/documentation/v2/#delete-an-image delete-an-image)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.imagesDelete(imageId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Request an Action on an Image\n// Info: [https://developers.digitalocean.com/documentation/v2/#image-actions image-actions](https://developers.digitalocean.com/documentation/v2/#image-actions image-actions)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **action**: `*`, Action Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesRequestAction(imageId, action, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get the status of an Action\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-action retrieve-an-existing-image-action](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-image-action retrieve-an-existing-image-action)\n// **Parameters**\n// **imageId**: `number`, The Id of the Image\n// **actionId**: `number`, The Id of the Action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.imagesGetAction(imageId, actionId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Get all Floating IPs\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-floating-ips list-all-floating-ips](https://developers.digitalocean.com/documentation/v2/#list-all-floating-ips list-all-floating-ips)\n// **Parameters**\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsGetAll(query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Create and assign a Floating IP to a specific droplet.\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet](https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet)\n// **Parameters**\n// **dropletId**: `number`, The ID of Droplet that the Floating IP will be assigned to.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsAssignDroplet(dropletId, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Create and assign a Floating IP to a region.\n// Info: [https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet](https://developers.digitalocean.com/documentation/v2/#create-a-new-floating-ip-assigned-to-a-droplet create-a-new-floating-ip-assigned-to-a-droplet)\n// **Parameters**\n// **region**: `string`, The slug identifier for the region the Floating IP will be reserved to.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsAssignRegion(region, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Retrieve an existing Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip retrieve-an-existing-floating-ip](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip retrieve-an-existing-floating-ip)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address.\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsGet(ipAddress, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Delete a Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#delete-a-floating-ips delete-a-floating-ips](https://developers.digitalocean.com/documentation/v2/#delete-a-floating-ips delete-a-floating-ips)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n\n### DigitalOcean.floatingIpsDelete(ipAddress, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n// Request an action on a Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#floating-ip-actions floating-ip-actions](https://developers.digitalocean.com/documentation/v2/#floating-ip-actions floating-ip-actions)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **action**: `*`, Action options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.floatingIpsRequestAction(ipAddress, action, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// List all actions for a Floating IP\n// Info: [https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-a-floating-ip list-all-actions-for-a-floating-ip](https://developers.digitalocean.com/documentation/v2/#list-all-actions-for-a-floating-ip list-all-actions-for-a-floating-ip)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **query**: `Object`, Query Options\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.floatingIpsGetActions(ipAddress, query, callback) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Retrieve an existing Floating IP action\n// Info: [https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip-action retrieve-an-existing-floating-ip-action](https://developers.digitalocean.com/documentation/v2/#retrieve-an-existing-floating-ip-action retrieve-an-existing-floating-ip-action)\n// **Parameters**\n// **ipAddress**: `string`, Floating IP address\n// **actionId**: `number`, The Id of the action\n// **callback**: `*`, Function to execute on completion\n\n\n\n\n\n### DigitalOcean.floatingIpsGetAction(ipAddress, actionId, callback) \n\n",
					"### DigitalOcean.",
					"public",
					"### DigitalOce",
					"### Digi",
					"### DigitalOcean",
					"public",
					"### DigitalOce",
					"### DigitalOcean.",
					"require",
					"type",
					"https",
					": ",
					"public",
					"$inject",
					"klass",
					"    function",
					"function",
					"minerFile",
					"export",
					"MinerStatusController",
					"Components",
					"this",
					"miner",
					"class",
					"interface",
					"$ctrl.miner.chart",
					"let",
					"self.miner",
					"self.hist",
					"miner",
					"miner.chart",
					"miner",
					"miner.chart",
					"nogloba",
					"  ",
					"times",
					"IInt",
					"interval",
					"declare ",
					"module",
					"type",
					"\"",
					"process",
					"module \"os",
					"module"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"sheets":
					[
					]
				}
			],
			"incremental_find":
			{
				"height": 44.0
			},
			"input":
			{
				"height": 69.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.doc":
			{
				"height": 0.0
			},
			"output.errorlist":
			{
				"height": 424.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.git":
			{
				"height": 230.0
			},
			"pinned_build_system": "",
			"position": "0,2,3,-1,-1,-1,-1,1826,488,488,2121",
			"project": "seed-gulp-ts.sublime-project",
			"replace":
			{
				"height": 88.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"packa",
						"seed-gulp-ts\\package.json"
					],
					[
						"pack",
						"seed-gulp-ts\\package.json"
					],
					[
						"gulp",
						"seed-gulp-ts\\gulpfile.js"
					],
					[
						"ma",
						"seed-gulp-ts\\src\\main.ts"
					],
					[
						"ine",
						"seed-gulp-ts\\src\\index.html"
					],
					[
						"in",
						"seed-gulp-ts\\src\\index.html"
					],
					[
						"run",
						"seed-gulp-ts\\run.ps1"
					],
					[
						"querie",
						"seed-gulp-ts\\src\\queries.ts"
					],
					[
						"inde",
						"@types\\angular\\index.d.ts"
					],
					[
						"typean",
						"@types\\angular\\index.d.ts"
					],
					[
						"",
						"seed-gulp-ts\\package.json"
					],
					[
						"miners",
						"seed-gulp-ts\\src\\miner-status.ts"
					],
					[
						"dash",
						"seed-gulp-ts\\src\\dashboard.ts"
					],
					[
						"compo",
						"seed-gulp-ts\\src\\components.ts"
					],
					[
						"miner",
						"seed-gulp-ts\\src\\miner-status.ts"
					],
					[
						"do",
						"seed-gulp-ts\\src\\do-wrapper.d.ts"
					],
					[
						"comp",
						"seed-gulp-ts\\src\\components.ts"
					],
					[
						"ind",
						"seed-gulp-ts\\src\\index.html"
					],
					[
						"dashboa",
						"seed-gulp-ts\\src\\dashboard.ts"
					],
					[
						"dow",
						"seed-gulp-ts\\src\\do-wrapper.d.ts"
					],
					[
						"indexts",
						"seed-gulp-ts\\src\\index.ts"
					],
					[
						"mine",
						"seed-gulp-ts\\lib\\miner-status.js"
					],
					[
						"angulad",
						"@types\\angular\\index.d.ts"
					],
					[
						"testgree",
						"seed-gulp-ts\\test\\greeter-spec.ts"
					],
					[
						"gree",
						"seed-gulp-ts\\lib\\greeter.js"
					],
					[
						"tscon",
						"seed-gulp-ts\\tsconfig.json"
					],
					[
						"tsconfif",
						"seed-gulp-ts\\src\\bower_components\\jquery\\src\\traversing\\findFilter.js"
					],
					[
						"char",
						"@types\\chart.js\\chart.js.d.ts"
					],
					[
						"anguin",
						"@types\\angular\\index.d.ts"
					],
					[
						"ang",
						"@types\\angular\\index.d.ts"
					],
					[
						"anguinde",
						"@types\\angular\\index.d.ts"
					],
					[
						"see",
						"seed-gulp-ts.sublime-project"
					],
					[
						"pa",
						"package.json"
					],
					[
						"tslin",
						"tslint.json"
					],
					[
						"gre",
						"src\\greeter.ts"
					],
					[
						"pac",
						"package.json"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 1250.0,
				"last_filter": "miner",
				"selected_items":
				[
					[
						"miner",
						"D:\\Mining\\Code\\miner.sublime-project"
					],
					[
						"plato",
						"D:\\Code\\neogov\\personal\\neogov.platform.sublime-project"
					],
					[
						"pla",
						"D:\\Code\\neogov\\personal\\neogov.platform.sublime-project"
					]
				],
				"width": 950.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 643.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 14,
			"workspace_name": "/D/Code/seed-gulp-ts/seed-gulp-ts.sublime-workspace"
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/D/Code/seed-gulp-ts/seed-gulp-ts.sublime-workspace",
			"/D/Code/neogov/personal/neogov.platform.sublime-workspace",
			"/D/Mining/Code/miner.sublime-workspace",
			"/D/Code/evolv.io/evolv.io.sublime-workspace",
			"/D/Mining/Droplets/droplets.sublime-workspace",
			"/D/Code/bosnjak/csv-editor/csv-editor.sublime-workspace",
			"/D/Code/angular-taiga-front/angular-taiga-front.sublime-workspace",
			"/D/Code/angular-test/angular-test.sublime-workspace",
			"/D/Code/booking/Booking.sublime-workspace",
			"/D/Code/chrome-command-palette/chrome-command-palette.sublime-workspace",
			"/D/Code/cpp-test-libs/main/code.sublime-workspace",
			"/D/Code/cs-example-ddd-frontdesk/FrontDeskSolution/frondesk.sublime-workspace",
			"/D/Code/cs-example-nopcommerce/nopcommerce.sublime-workspace",
			"/D/Code/cs-lib-inheritbdd-xunit/inheritbdd-xunit.sublime-workspace",
			"/D/Code/cs-lib-security-framework/cs-lib-security-framework.sublime-workspace",
			"/D/Code/cs-sample-zoo/cs-sample-zoo.sublime-workspace",
			"/D/Code/cs-test-mvc/cs-test-mvc.sublime-workspace",
			"/D/Code/Inetpub/wwwroot/Ego_Radna/Ego.sublime-workspace",
			"/D/Code/jog-tracker/jog-tracker.sublime-workspace",
			"/D/Code/js-node-visualstudio/js-node-visualstudio.sublime-workspace",
			"/D/Code/neogov/online/src/GJobs/UITests/node_modules/wd-parallel/node_modules/wd-sync/node_modules/wd/node_modules/request/node_modules/form-data/node-form-data.sublime-workspace",
			"/D/Code/neogov/personal/code/Contacts/Contacts.sublime-workspace",
			"/D/Code/neogov/personal/entityframework.sublime-workspace",
			"/D/Code/neogov/personal/neogov.all.sublime-workspace",
			"/D/Code/neogov/personal/neogov.corehr.sublime-workspace",
			"/D/Code/neogov/personal/neogov.sublime-workspace",
			"/D/Code/python-test/python.sublime-workspace",
			"/D/DotNet/_Private/Educ.Codility/codility.sublime-workspace",
			"/D/DotNet/_Private/private.sublime-workspace",
			"/D/DotNet/Prijevoznik/_KOD_/Prijevoznik/prijevoznik.sublime-workspace",
			"/D/DotNet/Python/project.sublime-workspace",
			"/D/UserData/SublimeText2.0/Data/Packages/PowerShell/PowerShell.sublime-workspace",
			"/D/UserData/SublimeText3.0/Data/Packages/packages.sublime-workspace"
		]
	}
}
